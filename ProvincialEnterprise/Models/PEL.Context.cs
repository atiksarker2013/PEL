//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProvincialEnterprise.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PELEntities : DbContext
    {
        public PELEntities()
            : base("name=PELEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AccountType> AccountTypes { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<CCLimit> CCLimits { get; set; }
        public virtual DbSet<ChequeInfo> ChequeInfoes { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerBank> CustomerBanks { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Grade> Grades { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<ItemJournal> ItemJournals { get; set; }
        public virtual DbSet<JournalDetail> JournalDetails { get; set; }
        public virtual DbSet<MainHead> MainHeads { get; set; }
        public virtual DbSet<Market> Markets { get; set; }
        public virtual DbSet<Model> Models { get; set; }
        public virtual DbSet<OpeningStock> OpeningStocks { get; set; }
        public virtual DbSet<PaymentMode> PaymentModes { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductDetail> ProductDetails { get; set; }
        public virtual DbSet<PurchaseDetail> PurchaseDetails { get; set; }
        public virtual DbSet<PurchaseHead> PurchaseHeads { get; set; }
        public virtual DbSet<ReceivePayment> ReceivePayments { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<StockOpening> StockOpenings { get; set; }
        public virtual DbSet<StockSerial> StockSerials { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Thana> Thanas { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<VoucherInfo> VoucherInfoes { get; set; }
        public virtual DbSet<WebContent> WebContents { get; set; }
        public virtual DbSet<Weekend> Weekends { get; set; }
    
        public virtual ObjectResult<PurchaseDetailPurchase> GetPurchaseDetailByPurchase(string invoiceNo)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseDetailPurchase>("GetPurchaseDetailByPurchase", invoiceNoParameter);
        }
    
        public virtual ObjectResult<PurchaseDetailById_Result> PurchaseDetailById(Nullable<int> purchaseDetailId)
        {
            var purchaseDetailIdParameter = purchaseDetailId.HasValue ?
                new ObjectParameter("PurchaseDetailId", purchaseDetailId) :
                new ObjectParameter("PurchaseDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseDetailById_Result>("PurchaseDetailById", purchaseDetailIdParameter);
        }
    }
}
